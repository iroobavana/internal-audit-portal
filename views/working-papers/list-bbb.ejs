<!DOCTYPE html>
<html>
<head>
  <title><%= title %> - Internal Audit Portal</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
      background: #f8fafc;
      color: #1e293b;
    }
    
    /* Main Content */
    .main-content {
      margin-left: 260px;
      min-height: 100vh;
      padding: 32px;
      max-width: calc(100% - 260px);
    }
    
    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 32px;
    }
    
    .page-title {
      font-size: 32px;
      font-weight: 700;
      color: #0f172a;
    }
    
    /* Notification Toast */
    .notification-container {
      position: fixed;
      top: 32px;
      right: 32px;
      z-index: 9999;
      max-width: 420px;
    }
    
    .notification {
      background: white;
      border-radius: 16px;
      padding: 20px 24px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      border: 1px solid #e2e8f0;
      display: flex;
      align-items: center;
      gap: 16px;
      margin-bottom: 16px;
      animation: slideIn 0.4s ease;
      transition: all 0.3s ease;
    }
    
    .notification.success {
      border-left: 4px solid #3b82f6;
    }
    
    .notification.error {
      border-left: 4px solid #ef4444;
    }
    
    .notification.hiding {
      animation: slideOut 0.4s ease forwards;
    }
    
    @keyframes slideIn {
      from {
        transform: translateX(450px);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }
    
    @keyframes slideOut {
      from {
        transform: translateX(0);
        opacity: 1;
      }
      to {
        transform: translateX(450px);
        opacity: 0;
      }
    }
    
    .notification-icon {
      width: 40px;
      height: 40px;
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
      font-size: 20px;
    }
    
    .notification.success .notification-icon {
      background: #dbeafe;
      color: #3b82f6;
    }
    
    .notification.error .notification-icon {
      background: #fee2e2;
      color: #ef4444;
    }
    
    .notification-message {
      flex: 1;
      font-size: 15px;
      font-weight: 500;
      color: #1e293b;
      line-height: 1.5;
    }
    
    .notification-close {
      background: #f8fafc;
      border: none;
      cursor: pointer;
      color: #64748b;
      padding: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 8px;
      transition: all 0.2s;
      width: 32px;
      height: 32px;
    }
    
    .notification-close:hover {
      background: #e2e8f0;
      color: #1e293b;
    }
    
    /* Search and Filter Section */
    .search-filter-section {
      background: white;
      border-radius: 16px;
      padding: 24px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
      border: 1px solid #e2e8f0;
      margin-bottom: 24px;
      display: flex;
      gap: 16px;
      align-items: center;
      flex-wrap: wrap;
    }
    
    .search-box {
      position: relative;
      flex: 1;
      min-width: 300px;
    }
    
    .search-icon {
      position: absolute;
      left: 16px;
      top: 50%;
      transform: translateY(-50%);
      color: #64748b;
      font-size: 16px;
    }
    
    .search-input {
      width: 100%;
      border: 1px solid #e2e8f0;
      border-radius: 10px;
      padding: 12px 16px 12px 44px;
      font-size: 14px;
      transition: all 0.3s ease;
      background: #ffffff;
      box-shadow: 0 1px 2px rgba(0,0,0,0.05);
    }
    
    .search-input:focus {
      border-color: #3b82f6;
      box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);
      outline: none;
    }
    
    .filter-group {
      display: flex;
      gap: 12px;
      align-items: center;
    }
    
    .filter-select {
      border: 1px solid #e2e8f0;
      border-radius: 10px;
      padding: 12px 16px;
      font-size: 14px;
      background: #ffffff;
      box-shadow: 0 1px 2px rgba(0,0,0,0.05);
      transition: all 0.3s ease;
      min-width: 150px;
      cursor: pointer;
    }
    
    .filter-select:focus {
      border-color: #3b82f6;
      box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);
      outline: none;
    }
    
    .clear-filters-btn {
      background: #f1f5f9;
      border: 1px solid #e2e8f0;
      color: #64748b;
      border-radius: 10px;
      padding: 12px 20px;
      font-weight: 600;
      transition: all 0.2s;
      cursor: pointer;
      font-size: 14px;
    }
    
    .clear-filters-btn:hover {
      background: #e2e8f0;
      color: #1e293b;
    }
    
    /* Card Styles */
    .card-modern {
      background: white;
      border-radius: 16px;
      padding: 32px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
      border: 1px solid #e2e8f0;
      margin-bottom: 24px;
    }
    
    /* Button Styles */
    .btn-primary {
      background: #3b82f6;
      border: none;
      border-radius: 8px;
      padding: 10px 24px;
      font-weight: 600;
      transition: all 0.2s;
      color: white;
      text-decoration: none;
      display: inline-block;
    }
    
    .btn-primary:hover {
      background: #2563eb;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
      color: white;
    }
    
    .btn-info {
      background: #0ea5e9;
      border: none;
      color: white;
      border-radius: 8px;
      padding: 10px 20px;
      font-weight: 600;
      text-decoration: none;
      display: inline-block;
    }
    
    .btn-info:hover {
      background: #0284c7;
      color: white;
    }
    
    .btn-secondary {
      background: #f1f5f9;
      border: 2px solid #e2e8f0;
      color: #0f172a;
      border-radius: 8px;
      padding: 8px 20px;
      font-weight: 600;
      transition: all 0.2s;
      text-decoration: none;
      display: inline-block;
    }
    
    .btn-secondary:hover {
      background: #e2e8f0;
      border-color: #cbd5e1;
      color: #0f172a;
    }
    
    .btn-warning {
      background: #f59e0b;
      border: none;
      color: white;
      border-radius: 8px;
      padding: 10px 20px;
      font-weight: 600;
      transition: all 0.2s;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
    }
    
    .btn-warning:hover {
      background: #d97706;
      color: white;
    }
    
    .btn-danger {
      background: #ef4444;
      border: none;
      color: white;
      border-radius: 8px;
      padding: 10px 20px;
      font-weight: 600;
      transition: all 0.2s;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
    }
    
    .btn-danger:hover {
      background: #dc2626;
      color: white;
    }
    
    .btn-sm {
      padding: 6px 14px;
      font-size: 13px;
    }
    
    /* Table Styles */
    .table-modern {
      width: 100%;
      border-collapse: collapse;
    }
    
    .table-modern thead {
      background: #f8fafc;
      border-bottom: 2px solid #e2e8f0;
    }
    
    .table-modern th {
      padding: 16px;
      text-align: left;
      font-weight: 600;
      color: #475569;
      font-size: 13px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      white-space: nowrap;
    }
    
    .table-modern td {
      padding: 16px;
      border-bottom: 1px solid #f1f5f9;
      color: #64748b;
      font-size: 14px;
    }
    
    .table-modern tbody tr {
      transition: all 0.2s ease;
    }
    
    .table-modern tbody tr:hover {
      background: #f8fafc;
    }
    
    .table-modern tbody tr:last-child td {
      border-bottom: none;
    }
    
    /* Badge Styles */
    .badge-custom {
      padding: 6px 14px;
      border-radius: 8px;
      font-size: 12px;
      font-weight: 600;
      display: inline-block;
      text-transform: capitalize;
    }
    
    .badge-success {
      background: #dcfce7;
      color: #166534;
    }
    
    .badge-primary {
      background: #dbeafe;
      color: #1e40af;
    }
    
    .badge-secondary {
      background: #f1f5f9;
      color: #64748b;
    }
    
    /* Empty State */
    .empty-state {
      text-align: center;
      padding: 64px 24px;
    }
    
    .empty-icon {
      font-size: 64px;
      color: #cbd5e1;
      margin-bottom: 16px;
    }
    
    .empty-text {
      font-size: 16px;
      color: #64748b;
    }
    
    /* Modal Styling */
    .modal-content {
      border-radius: 16px;
      border: none;
      box-shadow: 0 20px 50px rgba(0,0,0,0.3);
    }
    
    .modal-header {
      border-bottom: 1px solid #e2e8f0;
      padding: 24px;
    }
    
    .modal-title {
      font-weight: 700;
      color: #0f172a;
    }
    
    .modal-body {
      padding: 24px;
    }
    
    .modal-footer {
      border-top: 1px solid #e2e8f0;
      padding: 24px;
    }
  </style>
</head>
<body>
  <!-- Sidebar -->
  <%- include('../partials/sidebar') %>
  
  <!-- Notification Container -->
  <div class="notification-container" id="notificationContainer"></div>
  
  <!-- Main Content -->
  <div class="main-content">
    <!-- Page Header -->
    <div class="page-header">
      <h1 class="page-title">
        <i class="bi bi-file-earmark-text"></i> Working Papers
      </h1>
      <a href="/working-papers/create" class="btn btn-primary">
        <i class="bi bi-plus-circle"></i> Create Working Paper
      </a>
    </div>
    
    <!-- Search and Filter Section -->
    <div class="search-filter-section">
      <div class="search-box">
        <i class="bi bi-search search-icon"></i>
        <input type="text" id="searchInput" class="search-input" placeholder="Search working papers by name or creator...">
      </div>
      
      <div class="filter-group">
        <select id="allowRowInsertFilter" class="filter-select">
          <option value="">All Types</option>
          <option value="true">Allow Row Insert</option>
          <option value="false">No Row Insert</option>
        </select>
        
        <button class="clear-filters-btn" onclick="clearFilters()">
          <i class="bi bi-x-circle"></i> Clear
        </button>
      </div>
    </div>
    
    <!-- Working Papers Table -->
    <div class="card-modern">
      <% if (workingPapers.length === 0) { %>
        <div class="empty-state">
          <div class="empty-icon">
            <i class="bi bi-file-earmark-text"></i>
          </div>
          <div class="empty-text">No working papers found.</div>
          <a href="/working-papers/create" class="btn btn-primary mt-3">
            <i class="bi bi-plus-circle"></i> Create First Working Paper
          </a>
        </div>
      <% } else { %>
        <table class="table-modern">
          <thead>
            <tr>
              <th>#</th>
              <th>Name</th>
              <th>Columns</th>
              <th>Allow Row Insert</th>
              <th>Created By</th>
              <th>Created At</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="workingPapersTableBody">
            <% workingPapers.forEach((wp, index) => { %>
              <tr data-working-paper='<%= JSON.stringify({
                name: wp.name,
                creator: wp.created_by_name,
                allowRowInsert: wp.allow_row_insert
              }) %>'>
                <td><%= index + 1 %></td>
                <td style="font-weight: 600;"><%= wp.name %></td>
                <td><%= wp.column_count %> column(s)</td>
                <td>
                  <span class="badge-custom <%= wp.allow_row_insert ? 'badge-success' : 'badge-secondary' %>">
                    <%= wp.allow_row_insert ? 'Yes' : 'No' %>
                  </span>
                </td>
                <td><%= wp.created_by_name %></td>
                <td><%= new Date(wp.created_at).toLocaleDateString() %></td>
                <td>
                  <div style="display: flex; gap: 8px;">
                    <button class="btn btn-sm btn-info" title="View" onclick="viewWorkingPaper(<%= wp.id %>)">
                      <i class="bi bi-eye"></i>
                    </button>
                    <a href="/working-papers/<%= wp.id %>/edit" class="btn btn-sm btn-warning" title="Edit">
                      <i class="bi bi-pencil"></i>
                    </a>
                    <button class="btn btn-sm btn-danger" title="Delete" onclick="deleteWorkingPaper(<%= wp.id %>, '<%= wp.name %>')">
                      <i class="bi bi-trash"></i>
                    </button>
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
        
        <div id="noResults" style="display: none;" class="empty-state">
          <div class="empty-icon">
            <i class="bi bi-search"></i>
          </div>
          <div class="empty-text">No working papers match your search criteria.</div>
        </div>
      <% } %>
    </div>
  </div>
  
  <!-- View Modal -->
  <div class="modal fade" id="viewModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="modalTitle">Working Paper</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body" id="modalBody">
          <div class="text-center py-5">
            <div class="spinner-border" role="status" style="color: #3b82f6;">
              <span class="visually-hidden">Loading...</span>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-warning" id="editBtn" onclick="editFromModal()">
            <i class="bi bi-pencil"></i> Edit
          </button>
        </div>
      </div>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function showNotification(message, type = 'success') {
      const container = document.getElementById('notificationContainer');
      
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      
      const icon = type === 'success' ? 
        '<i class="bi bi-check-circle-fill"></i>' : 
        '<i class="bi bi-exclamation-triangle-fill"></i>';
      
      notification.innerHTML = `
        <div class="notification-icon">${icon}</div>
        <div class="notification-message">${message}</div>
        <button class="notification-close" onclick="dismissNotification(this)">
          <i class="bi bi-x"></i>
        </button>
      `;
      
      container.appendChild(notification);
      
      setTimeout(() => {
        dismissNotification(notification.querySelector('.notification-close'));
      }, 3000);
    }
    
    function dismissNotification(button) {
      const notification = button.closest('.notification');
      notification.classList.add('hiding');
      
      setTimeout(() => {
        notification.remove();
      }, 400);
    }
    
    <% if (typeof success_msg !== 'undefined' && success_msg.length > 0) { %>
      showNotification('<%= success_msg %>', 'success');
    <% } %>
    
    <% if (typeof error_msg !== 'undefined' && error_msg.length > 0) { %>
      showNotification('<%= error_msg %>', 'error');
    <% } %>
    
    <% if (typeof error !== 'undefined' && error.length > 0) { %>
      showNotification('<%= error %>', 'error');
    <% } %>
    
    // Search and filter functionality
    function filterWorkingPapers() {
      const searchValue = document.getElementById('searchInput').value.toLowerCase();
      const allowRowInsertValue = document.getElementById('allowRowInsertFilter').value;
      
      const rows = document.querySelectorAll('#workingPapersTableBody tr');
      let visibleCount = 0;
      
      rows.forEach((row, index) => {
        const data = JSON.parse(row.getAttribute('data-working-paper'));
        
        const matchesSearch = 
          data.name.toLowerCase().includes(searchValue) ||
          data.creator.toLowerCase().includes(searchValue);
        
        const matchesAllowRowInsert = !allowRowInsertValue || 
          String(data.allowRowInsert) === allowRowInsertValue;
        
        if (matchesSearch && matchesAllowRowInsert) {
          row.style.display = '';
          row.querySelector('td:first-child').textContent = visibleCount + 1;
          visibleCount++;
        } else {
          row.style.display = 'none';
        }
      });
      
      const tableBody = document.getElementById('workingPapersTableBody');
      const noResults = document.getElementById('noResults');
      const table = document.querySelector('.table-modern');
      
      if (visibleCount === 0) {
        if (table) table.style.display = 'none';
        if (noResults) noResults.style.display = 'block';
      } else {
        if (table) table.style.display = 'table';
        if (noResults) noResults.style.display = 'none';
      }
    }
    
    function clearFilters() {
      document.getElementById('searchInput').value = '';
      document.getElementById('allowRowInsertFilter').value = '';
      filterWorkingPapers();
    }
    
    document.getElementById('searchInput').addEventListener('input', filterWorkingPapers);
    document.getElementById('allowRowInsertFilter').addEventListener('change', filterWorkingPapers);
    
    // Modal functionality
    let currentWPId = null;
    const modal = new bootstrap.Modal(document.getElementById('viewModal'));
    
    function viewWorkingPaper(id) {
      currentWPId = id;
      modal.show();
      
      // Fetch working paper details
      fetch(`/working-papers/${id}/view-data`)
        .then(response => response.json())
        .then(data => {
          document.getElementById('modalTitle').textContent = data.workingPaper.name;
          
          let html = '<div class="mb-4">';
          html += `<p><strong>Allow Row Insert:</strong> <span class="badge-custom ${data.workingPaper.allow_row_insert ? 'badge-success' : 'badge-secondary'}">${data.workingPaper.allow_row_insert ? 'Yes' : 'No'}</span></p>`;
          html += `<p><strong>Created:</strong> ${new Date(data.workingPaper.created_at).toLocaleString()}</p>`;
          html += '</div>';
          
          if (data.columns.length > 0) {
            html += '<h6 class="mb-3">Table Structure:</h6>';
            html += '<div style="overflow-x: auto;"><table class="table table-bordered">';
            html += '<thead style="background: #f8fafc;"><tr>';
            
            data.columns.forEach(col => {
              html += `<th style="padding: 12px;">${col.column_name} <small class="text-muted">(${col.column_type})</small></th>`;
            });
            
            html += '</tr></thead><tbody><tr>';
            
            data.columns.forEach(col => {
              if (col.column_type === 'select' || col.column_type === 'multiselect') {
                try {
                  const options = JSON.parse(col.options);
                  html += `<td style="padding: 12px;"><small class="text-muted">Options: ${options.join(', ')}</small></td>`;
                } catch(e) {
                  html += '<td style="padding: 12px;"><small class="text-muted">-</small></td>';
                }
              } else if (col.column_type === 'formula') {
                html += `<td style="padding: 12px;"><small class="text-muted">Formula: ${col.formula}</small></td>`;
              } else {
                html += '<td style="padding: 12px;"><small class="text-muted">-</small></td>';
              }
            });
            
            html += '</tr></tbody></table></div>';
          } else {
            html += '<p class="text-muted">No columns configured</p>';
          }
          
          document.getElementById('modalBody').innerHTML = html;
        })
        .catch(error => {
          document.getElementById('modalBody').innerHTML = '<p class="text-danger">Error loading working paper</p>';
        });
    }
    
    function editFromModal() {
      if (currentWPId) {
        window.location.href = `/working-papers/${currentWPId}/edit`;
      }
    }
    
    function deleteWorkingPaper(id, name) {
      if (confirm(`Are you sure you want to delete "${name}"?\n\nThis action cannot be undone.`)) {
        fetch(`/working-papers/${id}/delete`, {
          method: 'POST'
        })
        .then(response => {
          if (response.ok) {
            showNotification('Working paper deleted successfully', 'success');
            setTimeout(() => {
              window.location.reload();
            }, 1000);
          } else {
            showNotification('Error deleting working paper', 'error');
          }
        })
        .catch(error => {
          showNotification('Error deleting working paper', 'error');
        });
      }
    }
  </script>
</body>
</html>
